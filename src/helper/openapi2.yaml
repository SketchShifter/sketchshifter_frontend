openapi: 3.0.0
info:
  title: SketchShifter API
  description: |
    SketchShifter バックエンドAPIの完全な仕様書

    ## 認証について
    多くのエンドポイントは認証が必要です。認証が必要なエンドポイントには、
    Authorizationヘッダーに `Bearer {token}` 形式でJWTトークンを含める必要があります。

    ## レスポンス形式
    - 成功時：HTTPステータス200, 201, 204 + 適切なJSONレスポンス
    - エラー時：HTTPステータス4xx, 5xx + エラーメッセージのJSONレスポンス

    ## 基本URL
    本番: `https://api.serendicode-sub.click/api/v1`
    開発: `http://localhost:8080/api/v1`
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.serendicode-sub.click/api/v1
    description: 本番環境
  - url: http://localhost:8080/api/v1
    description: 開発環境

tags:
  - name: health
    description: システムヘルスチェック
  - name: auth
    description: 認証・認可
  - name: users
    description: ユーザー管理
  - name: works
    description: 作品管理
  - name: tags
    description: タグ管理
  - name: comments
    description: コメント管理
  - name: projects
    description: プロジェクト管理
  - name: tasks
    description: タスク管理
  - name: votes
    description: 投票管理

paths:
  /health:
    get:
      tags:
        - health
      summary: ヘルスチェック
      description: APIサーバーの状態を確認する
      operationId: healthCheck
      responses:
        '200':
          description: 正常に動作している
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /auth/register:
    post:
      tags:
        - auth
      summary: ユーザー登録
      description: 新しいユーザーアカウントを作成する
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: メールアドレスが既に使用されている
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - auth
      summary: ログイン
      description: ユーザー認証を行い、JWTトークンを取得する
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 認証失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      tags:
        - auth
      summary: 自分のユーザー情報を取得
      description: JWTトークンから認証されたユーザー情報を取得する
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/change-password:
    post:
      tags:
        - auth
      summary: パスワード変更
      description: ユーザーのパスワードを変更する
      operationId: changePassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
      responses:
        '200':
          description: パスワード変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      tags:
        - users
      summary: ユーザー情報を取得
      description: IDでユーザー情報を取得する
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: ユーザーID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/works:
    get:
      tags:
        - users
      summary: ユーザーの作品一覧を取得
      description: 特定のユーザーが投稿した作品一覧を取得する
      operationId: getUserWorks
      parameters:
        - name: id
          in: path
          required: true
          description: ユーザーID
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkListResponse'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile:
    put:
      tags:
        - users
      summary: プロフィールを更新
      description: 自分のプロフィール情報を更新する
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works:
    get:
      tags:
        - works
      summary: 作品一覧を取得
      description: 作品の一覧を取得する（検索、フィルタリング、ソート機能付き）
      operationId: getWorks
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: search
          in: query
          description: 検索キーワード
          schema:
            type: string
        - name: tag
          in: query
          description: タグでフィルタリング
          schema:
            type: string
        - name: user_id
          in: query
          description: ユーザーIDでフィルタリング
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: ソート順
          schema:
            type: string
            enum: [newest, popular, likes]
            default: newest
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkListResponse'

    post:
      tags:
        - works
      summary: 作品を作成
      description: 新しい作品を作成する
      operationId: createWork
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateWorkRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}:
    get:
      tags:
        - works
      summary: 作品を取得
      description: IDで作品を取得する
      operationId: getWorkById
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - works
      summary: 作品を更新
      description: 既存の作品を更新する
      operationId: updateWork
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateWorkRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - works
      summary: 作品を削除
      description: 既存の作品を削除する
      operationId: deleteWork
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/like:
    post:
      tags:
        - works
      summary: いいねを追加
      description: 作品にいいねを追加する
      operationId: addLike
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: いいね追加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes_count:
                    type: integer
                    description: 現在のいいね数
        '400':
          description: 既にいいねしています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - works
      summary: いいねを削除
      description: 作品からいいねを削除する
      operationId: removeLike
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: いいね削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes_count:
                    type: integer
                    description: 現在のいいね数
        '400':
          description: いいねしていません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/liked:
    get:
      tags:
        - works
      summary: いいね状態を確認
      description: ユーザーが作品にいいねしているかどうかを確認する
      operationId: hasLiked
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  liked:
                    type: boolean
                    description: いいねしているかどうか
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/comments:
    get:
      tags:
        - comments
      summary: 作品のコメント一覧を取得
      description: 作品に投稿されたコメント一覧を取得する
      operationId: getWorkComments
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - comments
      summary: コメントを投稿
      description: 作品にコメントを投稿する
      operationId: createComment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
      responses:
        '201':
          description: コメント投稿成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    $ref: '#/components/schemas/Comment'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comments/{id}:
    put:
      tags:
        - comments
      summary: コメントを更新
      description: 既存のコメントを更新する
      operationId: updateComment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: コメントID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    $ref: '#/components/schemas/Comment'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: コメントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - comments
      summary: コメントを削除
      description: 既存のコメントを削除する
      operationId: deleteComment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: コメントID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: コメントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tags:
    get:
      tags:
        - tags
      summary: タグ一覧を取得
      description: タグの一覧を取得する
      operationId: getTags
      parameters:
        - name: search
          in: query
          description: 検索キーワード
          schema:
            type: string
        - name: limit
          in: query
          description: 取得する最大件数
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'

  /projects:
    get:
      tags:
        - projects
      summary: プロジェクト一覧を取得
      description: 自分が参加しているプロジェクトの一覧を取得する
      operationId: getProjects
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: search
          in: query
          description: 検索キーワード
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - projects
      summary: プロジェクトを作成
      description: 新しいプロジェクトを作成する
      operationId: createProject
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/my:
    get:
      tags:
        - projects
      summary: 自分が参加しているプロジェクト一覧を取得
      description: 自分が参加しているプロジェクトの一覧を取得する
      operationId: getMyProjects
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/join:
    post:
      tags:
        - projects
      summary: 招待コードでプロジェクトに参加
      description: 招待コードを使用してプロジェクトに参加する
      operationId: joinProject
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinProjectRequest'
      responses:
        '200':
          description: 参加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
        '400':
          description: 無効な招待コード
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/{id}:
    get:
      tags:
        - projects
      summary: プロジェクトを取得
      description: IDでプロジェクトを取得する
      operationId: getProjectById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - projects
      summary: プロジェクトを更新
      description: 既存のプロジェクトを更新する
      operationId: updateProject
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - projects
      summary: プロジェクトを削除
      description: 既存のプロジェクトを削除する
      operationId: deleteProject
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/{id}/members:
    get:
      tags:
        - projects
      summary: プロジェクトメンバー一覧を取得
      description: プロジェクトに参加しているメンバーの一覧を取得する
      operationId: getProjectMembers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectMember'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/{id}/members/{memberID}:
    delete:
      tags:
        - projects
      summary: メンバーをプロジェクトから削除
      description: プロジェクトからメンバーを削除する（オーナーのみ実行可能）
      operationId: removeProjectMember
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
        - name: memberID
          in: path
          required: true
          description: メンバーID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトまたはメンバーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /projects/{id}/invitation-code:
    post:
      tags:
        - projects
      summary: 招待コードを生成
      description: プロジェクトの新しい招待コードを生成する（オーナーのみ実行可能）
      operationId: generateInvitationCode
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 生成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_code:
                    type: string
                    description: 新しい招待コード
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks:
    post:
      tags:
        - tasks
      summary: タスクを作成
      description: 新しいタスクを作成する
      operationId: createTask
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/Task'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{id}:
    get:
      tags:
        - tasks
      summary: タスクを取得
      description: IDでタスクを取得する
      operationId: getTaskById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/Task'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - tasks
      summary: タスクを更新
      description: 既存のタスクを更新する
      operationId: updateTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/Task'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - tasks
      summary: タスクを削除
      description: 既存のタスクを削除する
      operationId: deleteTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/project/{projectID}:
    get:
      tags:
        - tasks
      summary: プロジェクトのタスク一覧を取得
      description: プロジェクトに属するタスクの一覧を取得する
      operationId: getProjectTasks
      security:
        - bearerAuth: []
      parameters:
        - name: projectID
          in: path
          required: true
          description: プロジェクトID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: プロジェクトが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{id}/works:
    get:
      tags:
        - tasks
      summary: タスクの作品一覧を取得
      description: タスクに関連する作品の一覧を取得する
      operationId: getTaskWorks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkListResponse'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - tasks
      summary: 作品をタスクに追加
      description: 既存の作品をタスクに追加する
      operationId: addWorkToTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkToTaskRequest'
      responses:
        '204':
          description: 追加成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクまたは作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{id}/works/{workID}:
    delete:
      tags:
        - tasks
      summary: 作品をタスクから削除
      description: タスクから作品を削除する
      operationId: removeWorkFromTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
        - name: workID
          in: path
          required: true
          description: 作品ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクまたは作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/orders:
    put:
      tags:
        - tasks
      summary: タスクの表示順序を更新
      description: プロジェクト内のタスクの表示順序を更新する
      operationId: updateTaskOrders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskOrdersRequest'
      responses:
        '204':
          description: 更新成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes:
    post:
      tags:
        - votes
      summary: 投票を作成
      description: 新しい投票を作成する
      operationId: createVote
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoteRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  vote:
                    $ref: '#/components/schemas/Vote'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}:
    get:
      tags:
        - votes
      summary: 投票を取得
      description: IDで投票を取得する
      operationId: getVoteById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  vote:
                    $ref: '#/components/schemas/Vote'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - votes
      summary: 投票を更新
      description: 既存の投票を更新する
      operationId: updateVote
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoteRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  vote:
                    $ref: '#/components/schemas/Vote'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - votes
      summary: 投票を削除
      description: 既存の投票を削除する
      operationId: deleteVote
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/task/{taskID}:
    get:
      tags:
        - votes
      summary: タスクの投票一覧を取得
      description: タスクに属する投票の一覧を取得する
      operationId: getTaskVotes
      security:
        - bearerAuth: []
      parameters:
        - name: taskID
          in: path
          required: true
          description: タスクID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vote'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: タスクが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/options:
    post:
      tags:
        - votes
      summary: 投票オプションを追加
      description: 投票に新しいオプションを追加する
      operationId: addVoteOption
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVoteOptionRequest'
      responses:
        '201':
          description: 追加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  option:
                    $ref: '#/components/schemas/VoteOption'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/options/{optionID}:
    delete:
      tags:
        - votes
      summary: 投票オプションを削除
      description: 投票からオプションを削除する
      operationId: deleteVoteOption
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
        - name: optionID
          in: path
          required: true
          description: オプションID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票またはオプションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/vote:
    post:
      tags:
        - votes
      summary: 投票する
      description: 投票のオプションに投票する
      operationId: castVote
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastVoteRequest'
      responses:
        '204':
          description: 投票成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票またはオプションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/vote/{optionID}:
    delete:
      tags:
        - votes
      summary: 投票を取り消す
      description: 投票したオプションへの投票を取り消す
      operationId: removeVote
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
        - name: optionID
          in: path
          required: true
          description: オプションID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 取り消し成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票またはオプションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/user-votes:
    get:
      tags:
        - votes
      summary: ユーザーの投票を取得
      description: 投票に対する自分の投票状況を取得する
      operationId: getUserVotes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      $ref: '#/components/schemas/VoteResponse'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /votes/{id}/close:
    post:
      tags:
        - votes
      summary: 投票を終了
      description: 投票を終了状態にする
      operationId: closeVote
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 投票ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 終了成功
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 投票が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /debug/routes:
    get:
      tags:
        - debug
      summary: 登録されているルートを取得
      description: デバッグ用：登録されている全ルートの一覧を取得する
      operationId: getDebugRoutes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: ルート数
                  routes:
                    type: array
                    items:
                      type: object
                      properties:
                        method:
                          type: string
                          description: HTTPメソッド
                        path:
                          type: string
                          description: ルートパス

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTトークンを使用した認証

  parameters:
    pageParam:
      name: page
      in: query
      description: ページ番号
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1

    limitParam:
      name: limit
      in: query
      description: 1ページあたりの件数
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: エラーメッセージ

    Message:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: メッセージ

    HealthStatus:
      type: object
      required:
        - status
        - uptime
        - timestamp
        - version
      properties:
        status:
          type: string
          description: システムステータス
          example: ok
        uptime:
          type: string
          description: 起動からの時間
          example: 2h30m15s
        timestamp:
          type: string
          format: date-time
          description: 現在時刻
        version:
          type: string
          description: バージョン
          example: '1.0.0'

    User:
      type: object
      required:
        - id
        - email
        - name
        - nickname
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: ユーザーID
        email:
          type: string
          format: email
          description: メールアドレス
        name:
          type: string
          description: 名前
        nickname:
          type: string
          description: ニックネーム
        bio:
          type: string
          nullable: true
          description: 自己紹介
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    RegisterRequest:
      type: object
